# This code is generated by Dr. Manish Kumar with the collaboration of Dr. Enrico Salvati and Dr. Roberto Alessi.
# Contact email: Manish Kumar <mkumar2@me.iitr.ac.in>, Enrico Salvati <enrico.salvati@uniud.it>, Group website https://simed.uniud.it/
# This code produces the load vs displacement plot. The data is imported from the spreadsheets, and the plot is saved in .svg format.
# Copyright (C) <2023>  <Manish Kumar>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# All the required libraries are imported into the code 
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

# Import data from the spreadsheet
df = pd.read_excel ('Ploting.xlsx',sheet_name='Results', usecols="C,D")                            # specify the columns  
data = np.zeros((len(df)-4, 2))
sd1 = df.values[4:, :]                                                                             # specify the data

df = pd.read_excel ('Ploting.xlsx',sheet_name='Results', usecols="E,F")                            # specify the columns  
data = np.zeros((len(df)-4, 2))
sd2 = df.values[4:, :]                                                                             # specify the data

df = pd.read_excel ('Ploting.xlsx',sheet_name='Results', usecols="G,H")                            # specify the columns 
data = np.zeros((len(df)-4, 2))
sd3 = df.values[4:, :]                                                                             # specify the data

df = pd.read_excel ('Ploting.xlsx',sheet_name='Results', usecols="I,J")                            # specify the columns  
data = np.zeros((len(df)-4, 2))
sd4 = df.values[4:, :]                                                                             # specify the data

df = pd.read_excel ('Ploting.xlsx',sheet_name='Results', usecols="K,L")                            # specify the columns  
data = np.zeros((len(df)-4, 2))
sd5 = df.values[4:, :]                                                                             # specify the data

df = pd.read_excel ('Ploting.xlsx',sheet_name='Results', usecols="M,N")                            # specify the columns  
data = np.zeros((len(df)-4, 2))
sd6 = df.values[4:, :]                                                                             # specify the data

df = pd.read_excel ('Ploting.xlsx',sheet_name='Results', usecols="O,P")                            # specify the columns  
data = np.zeros((len(df)-4, 2))
sd7 = df.values[4:, :]                                                                             # specify the data

df = pd.read_excel ('Ploting.xlsx',sheet_name='Results', usecols="Q,R")                            # specify the columns  
data = np.zeros((len(df)-4, 2))
sd8 = df.values[4:, :]                                                                             # specify the data

# Plotting
plt.figure(1)
plt.plot (sd1[:,0],sd1[:,1],color='r', linewidth=2.0, label='Experimental_Upper_bound')
plt.plot (sd2[:,0],sd2[:,1],color='r', linewidth=2.0, label='Experimental_Lower_bound')
plt.plot (sd3[:,0],sd3[:,1],color='b', linewidth=2.0, label='Wu et al._2017(b=5;h=1)')
plt.plot (sd4[:,0],sd4[:,1],color='c', linewidth=2.0, label='Wu et al._2017(b=5;h=0.5)')
plt.plot (sd5[:,0],sd5[:,1],color='m', linewidth=2.0, label='Wu et al._2017(b=10;h=0.5)')
plt.plot (sd6[:,0],sd6[:,1],color='y', linewidth=2.0, label='GPFniCS_(b=5;h=1)')
plt.plot (sd7[:,0],sd7[:,1],color='k', linewidth=2.0, label='GPFniCS_(b=5;h=0.5)')
plt.plot (sd8[:,0],sd8[:,1],color='g', linewidth=2.0, label='GPFniCS_(b=10;h=0.5)')
plt.grid('on')
plt.xlabel('Displacement (mm)')
plt.ylabel('Load (N)')
plt.title('L Shaped Specimen Specimen')
plt.legend()
plt.xlim([0.,0.8])
plt.ylim([0.,8200.])
plt.xticks([0., 0.14, 0.28, 0.42, 0.56, 0.7, 0.84])
plt.yticks([0., 1600., 3200., 4800., 6400., 8000.])
plt.savefig('Validation.svg')
plt.show()

